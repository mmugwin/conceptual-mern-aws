{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/NotFoundPage.js","pages/TopicsList.js","pages/topics-content.js","pages/TopicsListPage.js","components/AddQuestionForm.js","pages/AddQuestionPage.js","components/Questions.js","components/Answers.js","components/ScoreModal.js","pages/CodePage.js","pages/QuestionsListPage.js","components/Snippet.js","pages/CodeSnippets.js","pages/AnswersPage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","Fragment","className","src","alt","default_highlight","language","style","docco","AboutPage","href","target","NotFoundPage","TopicsList","_ref","topics","cardStyle","width","react","map","topic","key","react_router_dom","to","concat","textDecoration","title","description","TopicsListPage","pages_TopicsList","AddQuestionForm","Object","objectDestructuringEmpty","_useState","useState","_useState2","slicedToArray","setTopic","_useState3","_useState4","question","setQuestion","_useState5","_useState6","answer","setAnswer","addQuestion","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","fetch","method","body","JSON","stringify","headers","Content-Type","sent","json","stop","apply","this","arguments","type","rows","cols","class","disabled","onClick","AddQuestionPage","components_AddQuestionForm","Questions","queNum","Answers","setScoreValue","scoreValue","showGrade","setShowGrade","disable","setDisable","score","setScore","useEffect","toConsumableArray","addNewScore","console","log","ScoreModal","data-toggle","data-target","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","CodePage","codeBlock","QuestionsListPage","match","params","allQuestions","setAllQuestions","reviewAnswers","setReviewAnswers","_useState7","_useState8","averageScore","fetchData","myQuestionsList","allquestionsdata","components_Questions","myAnswersList","components_Answers","length","i","toFixed","codeData","pages_CodePage","components_ScoreModal","Snippet","snippets","slice","CodeSnippets","_id","snippet","setSnippet","A","data","then","forEach","element","push","components_Snippet","AnswersPage","NavBar","App","src_NavBar","react_router","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f96f0a86.chunk.js","sourcesContent":["import React from 'react';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nconst HomePage = () => {\r\n    const codeBlock =`    while(alive) \r\n    {\r\n        learn();    // diligently\r\n        practice(); // deliberately\r\n        apply();    // decidedly\r\n    }`\r\n    return(\r\n\r\n    <>\r\n        <div className='container'>\r\n            <div className=\"jumbotron\">\r\n                <h1 className=\"display-4\"><em>conceptual</em></h1>\r\n                <h4 className=\"display-7\"> in pursuit of expertise</h4>\r\n                <hr className=\"my-4\"></hr>\r\n                <p className='lead'>\r\n                    Hi, I'm Ngoni, and I'm here to help you transform useful information into lifelong knowledge! \r\n                    I feel incredibly lucky to live in today's connected world powered by technology that is optimized to entertain and inform. \r\n                    Unfortunately, I also find the modern world noisy, distraction-prone and information overloaded, making retaining what one learns unnecessarily \r\n                    challenging. I built <em>conceptual</em> to help myself address this challenge and I hope it serves you similarly.\r\n                </p>\r\n            </div>\r\n            \r\n            <div className='container'>\r\n                <div className=\"row featurette\">\r\n                <div className=\"col-md-9\">\r\n                    <h2 className=\"featurette-heading\">Knowledge  <span className=\"text-muted\">is power</span></h2>\r\n                    <p className='lead'>Research shows that effective learning is achieved through active recall, deliberate practice, and problem solving. <em>conceptual</em> helps facilitate all these processes. The result is that you can store more information in your long term memory, \r\n                        fostering connections that enable intuition, fast problem solving and ultimately expertise.</p>\r\n\r\n                        <p className='lead'>\r\n                            Welcome to my respository of knowledge that matters to me. <em>conceptual</em> is where I store all the important fundamentals that I have\r\n                            collected, and perhaps lost, in my education.\r\n                        </p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <img className=\"featurette-image img-fluid mx-auto\" src=\"/images/knowledge.png\" alt=\"Graphic of a stack of books representing knowledge\"></img>\r\n                </div>\r\n                </div>\r\n\r\n                <hr className=\"featurette-divider\"></hr>\r\n\r\n                <div className=\"row featurette\">\r\n                <div className=\"col-md-9 order-md-2\">\r\n                    <h2 className=\"featurette-heading\">Master  <span className=\"text-muted\">computational thinking and programming</span></h2>\r\n                    <p className='lead'>\r\n                    A basic understanding of coding is arguably as important as literacy and numeracy were 100 years ago! Today, programming is ubiquitous, \r\n                    and computer code silently powers virtually all industries. Those who know how to code have the power to turn their ideas into products.\r\n                    </p>\r\n                    <SyntaxHighlighter language=\"c++\" style={docco}>\r\n                        {codeBlock}\r\n                    </SyntaxHighlighter>\r\n     \r\n                    <p className='lead'> <em>conceptual</em> allows you to hone in on foundational algorithms and data structures, as well as fundamental computing concepts.</p>\r\n                </div>\r\n                <div className=\"col-md-3 order-md-1\">\r\n                    <img className=\"featurette-image img-fluid mx-auto\" src=\"/images/laptop.png\" alt=\"Graphic of a laptop\"></img>\r\n                </div>\r\n                </div>\r\n\r\n                <hr className=\"featurette-divider\"></hr>\r\n                <div className=\"row featurette\">\r\n                <div className=\"col-md-9\">\r\n                    <h2 className=\"featurette-heading\">Master  <span className=\"text-muted\">the fundamentals of engineering science</span></h2>\r\n                    <p className='lead'>\r\n                        The adage: 'If you don't use it, you lose it' applies to knowledge more than anything. Luckily, 'practice makes permanent'. <em>conceptual</em> gives you a\r\n                        reason and structured opportunity to use and retain your knowledge spanning a wide range of topics in engineering, and computer science.\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <img className=\"featurette-image img-fluid mx-auto\" src=\"/images/science.png\" alt=\"Generic graphic of slide rules representing science and engineering\"></img>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <br></br>            \r\n        </div>\r\n    </>\r\n)};\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst AboutPage = () => \r\n\r\n{\r\n    return (\r\n        <>\r\n            <div className='container'>   \r\n                <br></br>\r\n                    <div className='container'>\r\n                        <p className='display-5'>About me</p>\r\n                        <hr></hr>\r\n                        <p className='lead'>\r\n                            My name is Ngoni and I am a PhD student in electrical engineering at the University of Oxford. \r\n                            I enjoy software development and I have a keen interest in embedded applications. I have also dabbled in web development. \r\n                            <br></br><br></br>\r\n                            Even though my primary language is C++, I also have experience with scritping languages such as Python and Javascript, in addition to numerical computing in Matlab.\r\n                            <br></br><br></br>\r\n                            In my research, I implement algorithms for computationally efficient thermal modelling of PCB-based electronics using the finite element and finite difference methods. \r\n                            I have also researched multiport converter topologies for microgrid applications.\r\n                        </p>\r\n\r\n                        <p className='lead'>\r\n                            Contact me on <a href='https://www.linkedin.com/in/ngoni-mugwisi/' target=\"_blank\">LinkedIn </a> if you wish to connect.\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title display-5\">Why <em>conceptual?</em></h5>\r\n                        <hr></hr>\r\n\r\n                        <p className=\"card-text lead\">\r\n                            I decide to create <em>conceptual</em> after finding that I was not retaining information from my reading optimally. As a graduate student, I have had to read widely, and teach myself numerous specialized engineering topics. \r\n                            <br></br><br></br>\r\n                            I found that learning by reading is passive and that opportunities for deliberate practice were lacking. Therefore, I built <em>conceptual</em> as a Google Chrome extension that overode any new tab with a prompt for me to answer a question\r\n                            on a technical topic. I have reimplemented the tool as this webapp using the MERN stack. It's been very helpful for me, and I am figuring out ways to make it useful for others too. \r\n                        </p>\r\n                    </div>\r\n\r\n                    <br></br>\r\n                    <div className='container'>\r\n                        <p className='display-5'>Using <em>conceptual</em></p>\r\n                        <hr></hr>\r\n                        <p className=\"card-text lead\" >\r\n                            <em>conceptual</em> is designed to help you learn and master technical concepts.\r\n                        </p>\r\n                        <p className='lead'>\r\n                            To get the most out of <em>conceptual</em>, ensure that whenever you learn something new, you record your notes in the form of a question.\r\n                            Revisit the question at least once within 24 hours of learning the material, and a few more times over time. Resist the temptation to Google\r\n                            the answer. To maximize your retention, try to recall the answer and write it down in full. Do this until the you can reliably reference your new knowledge at work and in life.\r\n                            \r\n                        </p>\r\n                    </div>\r\n\r\n\r\n                <br></br>  \r\n\r\n                <div className='card-body'>\r\n\r\n                <h1 className='display-5'>More information</h1>\r\n                <hr></hr>\r\n                <p className='lead'>I am sharing below my GitHub Repo for implementations of fundamental and important algorithms in C++.</p>\r\n\r\n                <a href=\"https://github.com/mmugwin/fundamental-algorithms-cpp\" target=\"_blank\" className='lead'>Implementations of Fundamental Algorithms</a>\r\n                <ul className='lead'>\r\n                    <li>Binary Search</li>\r\n                    <li>Merge Sort</li>\r\n                    <li>Recursive and Iterative Depth First Search</li>\r\n                    <li>Inorder, preorder and post order tree traversals</li>\r\n                    <li>Binary Search and Depth First Search on a Matrix</li>\r\n                    <li>Binary Search and Depth First Search on a Graph</li>\r\n                    <li>Linked List Traversals</li>\r\n                    <li>Binary Heap Implementations</li>\r\n                    <li>Topological Sort Algorithms</li>\r\n                </ul>\r\n\r\n                </div>\r\n                <br></br>    \r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <div className='container'>\r\n        <br></br>\r\n        <h1>404: Page Not Found</h1>\r\n    </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TopicsList = ({topics}) => {\r\n    const cardStyle = {\r\n        width: \"23rem\"\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {topics.map((topic, key) => (\r\n                <Link className=\"topic-list-item\" key={key} to={`/questions/${topic.topic}`} style={{ textDecoration: 'none' }}>\r\n                <div className=\"container\">\r\n                    <br></br>\r\n                    <div className=\"card d-flex position-relative\" style={cardStyle}>\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title mt-0 display-6\">{topic.title}</h5>\r\n                            <p className=\"card-text lead\">{topic.description}</p>\r\n                            <button className=\"btn btn-primary\">Practice Now</button>\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n                </Link>\r\n            ))}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default TopicsList;","const topics = [\r\n    {\r\n        topic: 'random practice',\r\n        title: 'Miscallaneous',\r\n        description: `Generate a list of 15 random questions to practice on covering topics in basic data structures, embedded systems, parallel programming, language specifics for C++ and Python, memory architectures.`        \r\n    },\r\n    {\r\n        topic: 'parallel programming i',\r\n        title: 'Parallel Programming I',\r\n        description: 'This list on parallel and concurrent programming covers basic concepts such as Flynns taxonomy, sequential and parallel programming and snooping logic'\r\n    },\r\n    {\r\n        topic: 'parallel programming ii',\r\n        title: 'Parallel Programming II',\r\n        description: `More questions on parallel and concurrent programming covers topics such as processes, threads, cache coherence and more `        \r\n    },\r\n    {\r\n        topic: 'parallel programming iii',\r\n        title: 'Parallel Programming III',\r\n        description: `Dive deep into the inner workings of threads, covering topics on mutexes, threads, grabage collection and daemons`        \r\n    },\r\n    {\r\n        topic: 'object oriented design',\r\n        title: 'Object Oriented Design Concepts',\r\n        description: 'Master the important concepts of object oriented design by recalling and chucking important concepts such as polymorphism, inheritence, as well as object oriented data structures in C++'\r\n    },\r\n    {\r\n        topic: 'gnu and gnu make',\r\n        title: 'GNU and GNU Make',\r\n        description: `Test your understanding of the compilation process for embedded applications with GNU and GNU make.`        \r\n    },\r\n    {\r\n        topic: 'memory architectures',\r\n        title: 'Memory Architectures',\r\n        description: `Managing memory is an important part of writing efficient code for embedded systems. Practice the underlying concepts here!`        \r\n    },\r\n    {\r\n        topic: 'c++',\r\n        title: 'C++ Fundamentals',\r\n        description: 'C++ remains an important language for building fast, and scalable applications that power the modern world. Use this card to master its fundamentals, built in features and common programming code snippets in C++'\r\n    },\r\n    {\r\n        topic: 'parallel computing locks and liveness',\r\n        title: 'Locks and Liveness',\r\n        description: 'Explore this card to test and cement your understanding of locks and liveness as they relate to parallel and concurrent computing. Concepts covered include deadlock, reentrant mutex and starvation'        \r\n    },\r\n    {\r\n        topic: 'parallel computing synchronization',\r\n        title: 'Synchronization and Barriers',\r\n        description: 'Use retrieval practice to solidify your knowledge of synchronization concepts such as race conditions, semaphores and condition variables'        \r\n    },\r\n    {\r\n        topic: 'fundamental algorithms',\r\n        title: 'Fundamental Algorithms',\r\n        description: `Any self respecting software engineer understands and can implement classic algorithms for common tasks such as sorting and searching from scratch. Use this card to ensure you are on top of this. Here, we use C++ as our weapon of choice.`        \r\n    },{\r\n        topic: 'embedded data structures',\r\n        title: 'Embedded Data Structures',\r\n        description: `Practice the basics of the data structures used in embedded programming including unions, enumerations and structures,and more complex ones such as bit field, LIFO buffers abstract data structures`        \r\n    },\r\n    {\r\n        topic: 'data structures',\r\n        title: 'Data Structures',\r\n        description: `Representing data in a way that enables optimimal operations for insertion, deletion, searching and updating is important for writing efficient software. Study this content to ensure you understand the tradeoffs of different data structures such as heaps, trees, linked lists, graphs, arrays, stacks and queues`        \r\n    },\r\n    {\r\n        topic: 'classes in c++',\r\n        title: 'Classes in C++',\r\n        description: `Classes are the basic unit for describing object oriented abstract data structures. Here we cover the basics of defining classes in C++, including data attributes, constructors, methods etc`        \r\n    },\r\n    {\r\n        topic: 'python fundamentals',\r\n        title: 'Python Fundamentals',\r\n        description: `Learn the basics of Python, from the built in types such as sets, lists and dictionaries, string methods, list comprehension and other pythonic syntactic sugar`        \r\n    },\r\n    {\r\n        topic: 'memory alignment and endianness',\r\n        title: 'Memory Alignment',\r\n        description: `Memory management is a fundamental skill for low-level programming in C and C++. Here we cover basic topics such as endianness, and memory alignment for ARM mcus`        \r\n    },\r\n    {\r\n        topic: 'compiler attributes',\r\n        title: 'Compiler Attributes',\r\n        description: `Learn more about compiler attributes when working with C programs for embedded development. Topics include memory maps, register definition files and the Cortex-M CPU`        \r\n    },\r\n    {\r\n        topic: 'interfacing c programs with arm mcus',\r\n        title: 'Interfacing C Programs with Hardware',\r\n        description: `Embedded programming is about writing highly optimized low level code to interface hardware such as GPIO and other peripherals. Dive deep into the basic concepts involved in this process.`        \r\n    },\r\n    {\r\n        topic: 'the stack the heap code memory and data segments',\r\n        title: 'The Stack, Heap and Data Segments',\r\n        description: `Understanding the memory requirements of running programs is important to successfully work with C/C++. The questions presented here cover basic topics abut memory layout including the stack (for local variable storage), heap (for dynamic memory allocation), and data segments`        \r\n    },\r\n];\r\n\r\nexport default topics;","import React, { Fragment} from \"react\";\r\nimport TopicsList from \"./TopicsList\";\r\nimport topics from  \"./topics-content\";\r\n\r\n\r\nconst TopicsListPage = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <p className=\"display-5\">Topics</p>\r\n                <hr></hr>\r\n                <p className=\"lead\">\r\n                    All the questions presented here were set by me (Ngoni Mugwisi) from my own reading and study. For best results, please learn the fundamentals of the topic first before attempting any set. \r\n                    Good resources include textbooks, academic papers, Wikipedia, lecture notes, a selection of blogs etc. Although, I have done my best to ascertain correctness, I am happy to hear from you\r\n                    to address any errors.\r\n                </p>\r\n            </div>\r\n            <div className=\"card-deck container\">\r\n                <TopicsList topics={topics} />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default TopicsListPage;","import React, {Fragment, useState} from \"react\";\r\n\r\nconst AddQuestionForm =(({}) => {\r\n    const [topic, setTopic] = useState('');\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n\r\n    const addQuestion = async () => {\r\n        const result = await fetch(`/api/add-questions/`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ topic, question, answer }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setTopic('');\r\n        setQuestion('');\r\n        setAnswer('');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container justify-content-center\">\r\n                <h3 className=\"display-5\">Add Question</h3>\r\n                <hr></hr>\r\n                <p className=\"lead\">\r\n                    This link is disabled as I am not accepting input from outsiders.\r\n                </p>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"lead\">\r\n                            Topic\r\n                            <input type=\"text\" className=\"form-control\"/>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label className=\"lead\">\r\n                        Question\r\n                        <textarea rows=\"2\" cols=\"200\" className=\"form-control\"/>\r\n                    </label>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                    <label className=\"lead\">\r\n                        Answer\r\n                        <textarea rows=\"4\" cols=\"200\" className=\"form-control\"/>\r\n                    </label>\r\n                    </div>\r\n                    <button class=\"btn btn-primary\" disabled={true} onClick={() => addQuestion()}>Submit Question</button>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n});\r\n\r\nexport default AddQuestionForm;","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport AddQuestionForm from \"../components/AddQuestionForm\";\r\n\r\nconst AddQuestionPage = () => {\r\n    return(\r\n        <Fragment>\r\n            <br></br>\r\n                <AddQuestionForm />\r\n            <br></br>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default AddQuestionPage;","import React, { Fragment } from \"react\";\r\n\r\nconst Questions = ({queNum, topic, question, answer}) => {\r\n    return (\r\n        <Fragment>\r\n            <br></br>\r\n            <div className=\"container\">\r\n                <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <h6 className=\"lead\">Question</h6>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    {/* <h5 class=\"card-title\">Special title treatment</h5> */}\r\n                    <p class=\"card-text lead\"><strong>{question}</strong></p>\r\n                </div>\r\n            </div>                \r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Questions;","import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nconst Answers = ({question, answer, setScoreValue, scoreValue, showGrade, setShowGrade }) => {\r\n    const [disable, setDisable] = useState(false);\r\n    const [score, setScore] = useState();   \r\n\r\n    useEffect(()=>{\r\n        const addNewScore = async () => {\r\n            setScoreValue([...scoreValue, score])\r\n        } \r\n        addNewScore();\r\n    }, [score])\r\n\r\n    console.log(\"scoreValue:\", scoreValue)\r\n\r\n    return (\r\n        <Fragment>\r\n            <br></br>\r\n            <div className=\"container\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <p className=\"lead font-weight-normal\"> <strong>  {question} </strong> </p>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                            <p className=\"card-text lead\">{answer}</p>\r\n                            <hr></hr>\r\n\r\n                        <p className=\"display-9\">Rate your answer to this question</p>\r\n                        <div className=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-outline-danger\" disabled = {disable} onClick = { () => {setDisable(true); setScore(0); setShowGrade(showGrade + 1)}}>\r\n                                Incorrect\r\n                            </button>\r\n\r\n                            <button type=\"button\" class=\"btn btn-outline-warning\" disabled = {disable} onClick={() => {setDisable(true); setScore(0.25); setShowGrade(showGrade + 1)}}>\r\n                                25%\r\n                            </button>\r\n\r\n                            <button type=\"button\" class=\"btn btn-outline-secondary\" disabled = {disable} onClick={()=>{setDisable(true); setScore(0.50); setShowGrade(showGrade + 1)}}>\r\n                                50%\r\n                            </button>\r\n\r\n                            <button type=\"button\" class=\"btn btn-outline-success\" disabled = {disable} onClick={()=>{setDisable(true); setScore(0.75); setShowGrade(showGrade + 1)}}>\r\n                                75%\r\n                            </button>\r\n\r\n                            <button type=\"button\" class=\"btn btn-outline-success\" disabled = {disable} onClick={()=>{setDisable(true); setScore(1.0); setShowGrade(showGrade + 1)}}>\r\n                                Correct\r\n                            </button>\r\n                        </div>  \r\n                    </div>                   \r\n                </div>              \r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default Answers;","import React, { Fragment } from \"react\";\r\n\r\nconst ScoreModal = ({score}) => {\r\n    return (\r\n        <Fragment>\r\n            <button type=\"button\" className=\"btn btn-dark\" data-toggle=\"modal\" data-target=\"#exampleModalLong\">\r\n                Grade\r\n            </button>\r\n\r\n            <div className=\"modal fade\" id=\"exampleModalLong\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Your self assessed score is:</h5>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p className=\"display-6\"> {score}% </p>\r\n                    <p className=\"lead\">\r\n                        Welldone on attempting this problem set.<br></br>\r\n                        Review any incorrect answers as soon as you can, preferrably within the hour. \r\n                    </p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ScoreModal;","import React , { Fragment, useState, useEffect } from 'react';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\n\r\n\r\n\r\nconst CodePage = ({question, codeBlock}) => {\r\n    return(\r\n        <div className='container'>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <div className=\"container\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <p className='display-6'>Question</p>\r\n                        <p className='lead'>{question}</p>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <p class=\"card-text\">\r\n                        <SyntaxHighlighter language=\"c++\" style={docco}>\r\n                            {codeBlock}\r\n                        </SyntaxHighlighter>\r\n                        </p>\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n\r\n        </div>\r\n      )\r\n};\r\n\r\nexport default CodePage;","import React, {Fragment, useState, useEffect} from \"react\";\r\nimport Questions from \"../components/Questions.js\";\r\nimport Answers from \"../components/Answers.js\";\r\nimport ScoreModal from \"../components/ScoreModal.js\";\r\nimport CodePage from \"./CodePage.js\";\r\n\r\nconst QuestionsListPage = ({ match }) => {\r\n    const topic = match.params.topic;\r\n    const [allQuestions, setAllQuestions] = useState(null);\r\n    const [reviewAnswers, setReviewAnswers] = useState('false');\r\n    const [showGrade, setShowGrade] = useState(1);\r\n    const [scoreValue, setScoreValue] = useState([]);\r\n    let averageScore = 0;\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/questions/${topic}`);\r\n            const body = await result.json();\r\n            setAllQuestions(body);\r\n        }\r\n        fetchData();\r\n    }, [topic])\r\n\r\n\r\n    const myQuestionsList = allQuestions ? allQuestions.map( allquestionsdata => (\r\n        <Questions \r\n            queNum = {allquestionsdata.id}\r\n            topic = {allquestionsdata.topic}\r\n            question = {allquestionsdata.question}\r\n        />\r\n    )) : <></>;\r\n\r\n\r\n    const myAnswersList = allQuestions ? allQuestions.map( allquestionsdata => (\r\n        <Answers \r\n            question = {allquestionsdata.question}\r\n            answer = {allquestionsdata.answer} \r\n            setScoreValue = {setScoreValue}\r\n            scoreValue = {scoreValue}\r\n            showGrade = {showGrade}\r\n            setShowGrade = {setShowGrade}\r\n        />\r\n    )) : <></>;\r\n\r\n    console.log(myQuestionsList[0])\r\n\r\n    if(showGrade === myQuestionsList.length + 1) {\r\n        for(let i = 1; i < showGrade; i++) {\r\n            averageScore += scoreValue[i];\r\n            console.log(averageScore);\r\n        }\r\n        averageScore = averageScore/(showGrade - 1) * 100;\r\n        averageScore = averageScore.toFixed(1);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {reviewAnswers === 'true' && topic === \"fundamental algorithms\" && (\r\n                    allQuestions.map( codeData => (\r\n                        <CodePage question={codeData.question} codeBlock={codeData.answer}/>\r\n                    )\r\n                )\r\n            )}\r\n\r\n            {reviewAnswers === 'false' && (\r\n                <div className=\"container\">\r\n                    <h3 className=\"display-4\">Questions</h3>\r\n                    <hr></hr>\r\n                    <h3 className=\"lead font-weight-normal\"> topic: {topic}</h3>\r\n                    { myQuestionsList }\r\n                    <br></br>\r\n                    <button className=\"btn btn-primary\" onClick={\r\n                        ()=> {\r\n                            setReviewAnswers('true');\r\n                            setScoreValue([])\r\n                        }}>\r\n                        Review Answers\r\n                    </button>\r\n                    <br></br><br></br>\r\n                </div>\r\n            )}\r\n\r\n            {reviewAnswers === 'true' && topic !== \"fundamental algorithms\" &&\r\n                <div className=\"container\">\r\n                    <h3 className=\"display-4\">Answers</h3>\r\n                    <h5 className=\"lead font-weight-normal\">topic: {topic}</h5>\r\n                    { myAnswersList }\r\n                    <br></br>\r\n                    <div className=\"btn-toolbar\">             \r\n                        <div className=\"btn-group mr-2\">              \r\n                            <button className=\"btn btn-primary mx-auto position-10\" onClick={()=> {\r\n                                setShowGrade(1);\r\n                                setReviewAnswers('false');\r\n                                setScoreValue([])\r\n                                }}>\r\n                                Hide Answers and Reattempt\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"btn-group mr-2\">\r\n                            {\r\n                                showGrade === (allQuestions.length + 1) ? \r\n                                    <ScoreModal score={averageScore} /> : <></>\r\n                    \r\n                            }\r\n                        </div>\r\n                    </div>                  \r\n                    <br></br><br></br>\r\n                </div>\r\n            }\r\n        </Fragment>\r\n    ) \r\n}\r\n\r\nexport default QuestionsListPage;","import React, { Fragment } from \"react\";\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nconst Snippet = ({snippets}) => {\r\n    const cardStyle = {\r\n        width: \"23em\"\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            {snippets.map((snippets, key) => (\r\n                <span key={key}>\r\n                    <div className=\"container\">\r\n                    <br></br>\r\n                    <div className=\"card d-flex position-relative\" style={cardStyle}>\r\n                        <div className=\"card-body\" >\r\n                            <p className=\"card-title mt-0 lead\">{snippets.description.slice(1, snippets.description.length - 1)}</p>\r\n                            <hr></hr>\r\n                            <div className=\"card-text\">\r\n                            <SyntaxHighlighter language=\"c++\" style={docco}>\r\n                                {snippets.codeBlock.slice(1, snippets.codeBlock.length-1)}\r\n                            </SyntaxHighlighter>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </span>  \r\n                ))}\r\n        </Fragment>\r\n    )\r\n    \r\n}\r\nexport default Snippet;","import React, { Fragment, useState, useEffect } from 'react';\r\nimport Snippet from '../components/Snippet';\r\n\r\nconst CodeSnippets = () => {    \r\n    const [snippet, setSnippet] = useState([{codeBlock: \" \",    description: \" \",    topic: \" \",    _id: \" \"}]);\r\n    let A = [];\r\n    const fetchData = async () => {\r\n        const data = await fetch(\r\n            `/api/codesnippets/code snippets`\r\n            ).then((data) => data.json());\r\n\r\n        await data.forEach(element => {\r\n            A.push(element);\r\n        }); \r\n        \r\n        setSnippet(A);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [])\r\n\r\n    // console.log(A)\r\n    // console.log(snippets);\r\n;\r\n    return (\r\n        <Fragment>\r\n            <div className='container'>\r\n                <h3 className='display-5'>Mastery</h3>\r\n                <hr></hr>\r\n                <p className='lead'>\r\n                    Inspired by <strong>30 Seconds of Code</strong>, here is a collection of short code blocks in C and C++ for common tasks in computational problem solving, implemented in 10 lines or less. \r\n                    Topics covered include routine tasks (such as working with file system, standard library and STL), algorithms and data structures as well as the inner workings of both languages. This is a growing collection of interesting code snippets that\r\n                    I may have had to look up before. If mastered, this knowledge is bound to make one a more fluid programmer.\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n\r\n                    While this is useful as a reference, for best results, try to reproduce the code yourself before looking at the solution. \r\n                </p>\r\n            </div>\r\n            <br></br>\r\n            <div className='card-deck container'> \r\n                <Snippet snippets={snippet}/>                \r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default CodeSnippets;","import React, { Fragment } from \"react\";\r\n\r\nconst AnswersPage = ({myAnswersList}) => {\r\n    return (\r\n        <Fragment>\r\n            { myAnswersList }\r\n        </Fragment>\r\n\r\n    )\r\n};\r\n\r\nexport default AnswersPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => (\r\n    \r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark nav nav-tabs nav-fill\">\r\n        <div className=\"collapse navbar-collapse container\" id=\"navbarTogglerDemo01\">\r\n            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\"><em>conceptual</em></Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/topics-list\" className=\"nav-link\">Revise</Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/code-snippets\" className=\"nav-link\">Code Snippets</Link>\r\n                </li>  \r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/add-question\" className=\"nav-link\">Add Question</Link>\r\n                </li>\r\n\r\n            </ul>\r\n            \r\n            <ul className=\"navbar-nav my-2 my-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/about\" className=\"nav-link my-2 my-lg-0\">Notes by MN</Link>\r\n                </li>  \r\n            </ul>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\nexport default NavBar;","import React, { Fragment } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport HomePage from './pages/HomePage';\r\nimport AboutPage from './pages/AboutPage';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\nimport TopicsListPage from './pages/TopicsListPage';\r\nimport AddQuestionPage from './pages/AddQuestionPage';\r\nimport QuestionsListPage from './pages/QuestionsListPage';\r\nimport CodePage from './pages/CodePage';\r\nimport CodeSnippets from './pages/CodeSnippets';\r\nimport AnswersPage from './pages/AnswersPage';\r\nimport NavBar from './NavBar';\r\nimport './style.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n       <Router>\r\n         <div className=\"App\">\r\n           <NavBar />\r\n           <div id=\"page-body\">\r\n             <Switch>\r\n               <Route path=\"/\" component={HomePage} exact />\r\n               <Route path=\"/about\" component={AboutPage} />\r\n               <Route path=\"/topics-list\" component={TopicsListPage} />\r\n               <Route path=\"/add-question\" component={ AddQuestionPage }/>\r\n               <Route path=\"/questions/:topic\" component={QuestionsListPage}/>\r\n               <Route path=\"/answers\" component={AnswersPage}/>\r\n               <Route path=\"/code-snippets\" component={CodeSnippets} />\r\n               <Route component={NotFoundPage} />\r\n             </Switch>\r\n           </div>\r\n         </div>\r\n       </Router>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'whatwg-fetch';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}